{
    "sourceFile": "components/header.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1741638155240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1741638155240,
            "name": "Commit-0",
            "content": "'use client';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useAuthStore } from '@/lib/store';\nimport { useRouter } from 'next/navigation';\nimport { Search, Bell, User } from 'lucide-react';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { useState } from 'react';\n\nexport function Header() {\n  const { user, logout } = useAuthStore();\n  const router = useRouter();\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      router.push(`/search?q=${encodeURIComponent(searchQuery)}`);\n    }\n  };\n\n  const handleLogout = () => {\n    logout();\n    router.push('/login');\n  };\n\n  return (\n    <header className=\"sticky top-0 z-30 flex h-16 items-center justify-between border-b bg-card px-4 md:px-6\">\n      <form onSubmit={handleSearch} className=\"flex-1 md:max-w-md\">\n        <div className=\"relative\">\n          <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n          <Input\n            type=\"search\"\n            placeholder=\"Suchen...\"\n            className=\"w-full bg-background pl-8 md:w-[300px]\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n        </div>\n      </form>\n      <div className=\"flex items-center gap-4\">\n        <Button variant=\"ghost\" size=\"icon\" className=\"relative\">\n          <Bell className=\"h-5 w-5\" />\n          <span className=\"absolute -top-1 -right-1 flex h-4 w-4 items-center justify-center rounded-full bg-primary text-[10px] text-primary-foreground\">\n            3\n          </span>\n        </Button>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"relative h-8 w-8 rounded-full\">\n              <Avatar className=\"h-8 w-8\">\n                <AvatarImage src=\"/avatar.png\" alt={user?.username || 'User'} />\n                <AvatarFallback>\n                  {user?.username?.charAt(0).toUpperCase() || <User className=\"h-4 w-4\" />}\n                </AvatarFallback>\n              </Avatar>\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n            <DropdownMenuLabel className=\"font-normal\">\n              <div className=\"flex flex-col space-y-1\">\n                <p className=\"text-sm font-medium leading-none\">{user?.username}</p>\n                <p className=\"text-xs leading-none text-muted-foreground\">\n                  {user?.email}\n                </p>\n              </div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={() => router.push('/profile')}>\n              Profil\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={() => router.push('/settings')}>\n              Einstellungen\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={handleLogout}>\n              Abmelden\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n    </header>\n  );\n} "
        }
    ]
}