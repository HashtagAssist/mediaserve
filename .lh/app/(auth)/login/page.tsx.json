{
    "sourceFile": "app/(auth)/login/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1741638736806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741639146342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import { Input } from '@/components/ui/input';\n import { Label } from '@/components/ui/label';\n import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\n import Link from 'next/link';\n+import { toast } from 'sonner';\n \n export default function Login() {\n   const [username, setUsername] = useState('');\n   const [password, setPassword] = useState('');\n@@ -17,14 +18,20 @@\n   const handleSubmit = async (e: React.FormEvent) => {\n     e.preventDefault();\n     setIsLoading(true);\n \n-    // Hier würde normalerweise die API-Anfrage stattfinden\n-    // Für Testzwecke leiten wir direkt zur Dashboard-Seite weiter\n-    setTimeout(() => {\n-      router.push('/');\n+    try {\n+      // Hier würde normalerweise die API-Anfrage stattfinden\n+      // Für Testzwecke zeigen wir einen Toast an\n+      toast.success('Erfolgreich angemeldet!');\n+      setTimeout(() => {\n+        router.push('/');\n+        setIsLoading(false);\n+      }, 1000);\n+    } catch (error) {\n+      toast.error('Fehler bei der Anmeldung');\n       setIsLoading(false);\n-    }, 1000);\n+    }\n   };\n \n   return (\n     <div className=\"flex min-h-screen items-center justify-center p-4\">\n"
                }
            ],
            "date": 1741638736806,
            "name": "Commit-0",
            "content": "'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport Link from 'next/link';\n\nexport default function Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const router = useRouter();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    // Hier würde normalerweise die API-Anfrage stattfinden\n    // Für Testzwecke leiten wir direkt zur Dashboard-Seite weiter\n    setTimeout(() => {\n      router.push('/');\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"space-y-1\">\n          <CardTitle className=\"text-2xl font-bold\">Anmelden</CardTitle>\n          <CardDescription>\n            Geben Sie Ihre Anmeldedaten ein, um auf Ihren Medienserver zuzugreifen.\n          </CardDescription>\n        </CardHeader>\n        <form onSubmit={handleSubmit}>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"username\">Benutzername</Label>\n              <Input\n                id=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Passwort</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex flex-col space-y-4\">\n            <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n              {isLoading ? 'Anmelden...' : 'Anmelden'}\n            </Button>\n            <div className=\"text-center text-sm\">\n              Noch kein Konto?{' '}\n              <Link href=\"/register\" className=\"text-primary underline\">\n                Registrieren\n              </Link>\n            </div>\n          </CardFooter>\n        </form>\n      </Card>\n    </div>\n  );\n} "
        }
    ]
}