{
    "sourceFile": "app/(dashboard)/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1741638155240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1741638155240,
            "name": "Commit-0",
            "content": "'use client';\n\nimport { useQuery } from '@tanstack/react-query';\nimport { mediaApi, libraryApi } from '@/lib/api';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Button } from '@/components/ui/button';\nimport { Film, Music, Library, Play, Clock, Star } from 'lucide-react';\nimport Link from 'next/link';\nimport Image from 'next/image';\n\nexport default function Dashboard() {\n  const { data: recentMedia, isLoading: isLoadingMedia } = useQuery({\n    queryKey: ['recentMedia'],\n    queryFn: () => mediaApi.getAll().then((res) => res.data),\n  });\n\n  const { data: libraries, isLoading: isLoadingLibraries } = useQuery({\n    queryKey: ['libraries'],\n    queryFn: () => libraryApi.getAll().then((res) => res.data),\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col gap-4 md:flex-row\">\n        <Card className=\"flex-1\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Filme</CardTitle>\n            <Film className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {isLoadingMedia ? (\n                <Skeleton className=\"h-8 w-20\" />\n              ) : (\n                recentMedia?.filter((m: any) => m.type === 'MOVIE').length || 0\n              )}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Filme in Ihrer Sammlung\n            </p>\n          </CardContent>\n        </Card>\n        <Card className=\"flex-1\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Musik</CardTitle>\n            <Music className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {isLoadingMedia ? (\n                <Skeleton className=\"h-8 w-20\" />\n              ) : (\n                recentMedia?.filter((m: any) => m.type === 'MUSIC').length || 0\n              )}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Musikstücke in Ihrer Sammlung\n            </p>\n          </CardContent>\n        </Card>\n        <Card className=\"flex-1\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Bibliotheken</CardTitle>\n            <Library className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {isLoadingLibraries ? (\n                <Skeleton className=\"h-8 w-20\" />\n              ) : (\n                libraries?.length || 0\n              )}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Konfigurierte Medienbibliotheken\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div>\n        <h2 className=\"text-2xl font-bold tracking-tight mb-4\">Zuletzt hinzugefügt</h2>\n        <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\n          {isLoadingMedia ? (\n            Array.from({ length: 4 }).map((_, i) => (\n              <Card key={i} className=\"overflow-hidden\">\n                <Skeleton className=\"aspect-video w-full\" />\n                <CardContent className=\"p-4\">\n                  <Skeleton className=\"h-4 w-full mb-2\" />\n                  <Skeleton className=\"h-3 w-3/4\" />\n                </CardContent>\n              </Card>\n            ))\n          ) : (\n            (recentMedia || []).slice(0, 8).map((media: any) => (\n              <Link href={`/media/${media.id}`} key={media.id}>\n                <Card className=\"overflow-hidden transition-all hover:scale-105\">\n                  <div className=\"aspect-video relative\">\n                    {media.thumbnailPath ? (\n                      <Image\n                        src={`/api/thumbnails/media/${media.id}`}\n                        alt={media.title}\n                        fill\n                        className=\"object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-full h-full flex items-center justify-center bg-muted\">\n                        {media.type === 'MOVIE' ? (\n                          <Film className=\"h-12 w-12 text-muted-foreground\" />\n                        ) : (\n                          <Music className=\"h-12 w-12 text-muted-foreground\" />\n                        )}\n                      </div>\n                    )}\n                    <Button\n                      size=\"icon\"\n                      className=\"absolute bottom-2 right-2 rounded-full\"\n                    >\n                      <Play className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                  <CardContent className=\"p-4\">\n                    <h3 className=\"font-semibold truncate\">{media.title}</h3>\n                    <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                      {media.releaseYear && <span>{media.releaseYear}</span>}\n                      {media.duration && (\n                        <div className=\"flex items-center gap-1\">\n                          <Clock className=\"h-3 w-3\" />\n                          <span>\n                            {Math.floor(media.duration / 60)}m\n                          </span>\n                        </div>\n                      )}\n                      {media.averageRating > 0 && (\n                        <div className=\"flex items-center gap-1\">\n                          <Star className=\"h-3 w-3 fill-yellow-500 text-yellow-500\" />\n                          <span>{media.averageRating.toFixed(1)}</span>\n                        </div>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              </Link>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "
        }
    ]
}